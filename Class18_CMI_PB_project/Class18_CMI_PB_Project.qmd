---
title: "Class 18: CMI PB Project"
author: "Andrew Sue"
format: pdf
editor: visual
---

#Getting data using datapasta add-in

```{r}
cdc <- data.frame(
                                 year = c(1922L,1923L,1924L,1925L,
                                          1926L,1927L,1928L,1929L,1930L,1931L,
                                          1932L,1933L,1934L,1935L,1936L,
                                          1937L,1938L,1939L,1940L,1941L,1942L,
                                          1943L,1944L,1945L,1946L,1947L,
                                          1948L,1949L,1950L,1951L,1952L,
                                          1953L,1954L,1955L,1956L,1957L,1958L,
                                          1959L,1960L,1961L,1962L,1963L,
                                          1964L,1965L,1966L,1967L,1968L,1969L,
                                          1970L,1971L,1972L,1973L,1974L,
                                          1975L,1976L,1977L,1978L,1979L,1980L,
                                          1981L,1982L,1983L,1984L,1985L,
                                          1986L,1987L,1988L,1989L,1990L,
                                          1991L,1992L,1993L,1994L,1995L,1996L,
                                          1997L,1998L,1999L,2000L,2001L,
                                          2002L,2003L,2004L,2005L,2006L,2007L,
                                          2008L,2009L,2010L,2011L,2012L,
                                          2013L,2014L,2015L,2016L,2017L,2018L,
                                          2019L,2020L,2021L),
         cases = c(107473,164191,165418,152003,
                                          202210,181411,161799,197371,
                                          166914,172559,215343,179135,265269,
                                          180518,147237,214652,227319,103188,
                                          183866,222202,191383,191890,109873,
                                          133792,109860,156517,74715,69479,
                                          120718,68687,45030,37129,60886,
                                          62786,31732,28295,32148,40005,
                                          14809,11468,17749,17135,13005,6799,
                                          7717,9718,4810,3285,4249,3036,
                                          3287,1759,2402,1738,1010,2177,2063,
                                          1623,1730,1248,1895,2463,2276,
                                          3589,4195,2823,3450,4157,4570,
                                          2719,4083,6586,4617,5137,7796,6564,
                                          7405,7298,7867,7580,9771,11647,
                                          25827,25616,15632,10454,13278,
                                          16858,27550,18719,48277,28639,32971,
                                          20762,17972,18975,15609,18617,
                                          6124,2116)
       )
```

```{r}
library(tidyverse)
library(ggplot2)
```

```{r}
ggplot(cdc) +
  aes(year, cases) + 
  geom_point()+
  geom_line()+
  geom_vline(xintercept = c(1947,2020), color = c("yellow", "red"))
```

# Read data from the CMI-PB project

It returns a json data formar that we can read into R with the help of a package called **jsonlite**

```{r}
library(jsonlite)
```

```{r}
subject <- read_json("https://www.cmi-pb.org/api/subject", simplifyVector = TRUE)

head(subject)
```

```{r}
table(subject$infancy_vac)
```

>Q. How many Male/Female 

```{r}
table(subject$biological_sex)
```

>Q. How about race by gender?

```{r}
table(subject$race, subject$biological_sex)
```

```{r}
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE)

head(specimen)
```

```{r}
library(dplyr)
```

We can join these two datasets by a common cell (in this case the subject_id). We will use the package `dplyr` and its function `inner_join`. Note: There are several versions of the join function and you can add specfic arguments to join by a specific one (if there are more than one common column)

```{r}
meta <- inner_join(subject, specimen)
head(meta)
```

```{r}
ab_titer <- read_json("https://www.cmi-pb.org/api/v4/plasma_ab_titer", simplifyVector = TRUE)

head(ab_titer)
```

>Q. How many different Ab isotypes are there? 

```{r}
table(ab_titer$isotype)
```

>Q. How many antigens are there? 

```{r}
table(ab_titer$antigen)
```

Lets do another inner_join to put the antigen data with the meta

```{r}
abdata <- inner_join(meta, ab_titer)
head(abdata)
```

Lets make something interesting. Lets do an overall plot of antigen levels (MFI) for all antigens

```{r}
ggplot(abdata) +
  aes(MFI, antigen) +
  geom_boxplot()
```

```{r}
ggplot(abdata) +
  aes(MFI, antigen, col = infancy_vac) +
  geom_boxplot() + 
  facet_wrap(vars(visit), nrow=2)
```

Lets use dplyr to filter for PT and look only there. 

```{r}
PT_data <- abdata %>% filter(isotype == "IgG", antigen == "PT", dataset == "2021_dataset")
```

```{r}
table(PT_data$dataset)
```

```{r}
ggplot(PT_data) +
  aes(actual_day_relative_to_boost, MFI_normalised, col= infancy_vac, group = subject_id) + 
  geom_point() + 
  geom_line()
```

```{r}
PT2022_data <- abdata %>% filter(isotype == "IgG", antigen == "PT", dataset == "2022_dataset")
```

```{r}
ggplot(PT2022_data) +
  aes(actual_day_relative_to_boost, MFI_normalised, col= infancy_vac, group = subject_id) + 
  geom_point() + 
  geom_line()
```

