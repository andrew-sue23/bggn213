---
title: "Class 10: Structural Bioinformatics"
author: "Andrew Sue"
format: markdown_github
editor: visual
---

# What is in the PDB database?

PDB is a protein data bank.

Download a CSV file with current composition data from: https://www.rcsb.org/stats/summary

```{r}
PDBstats <- read.csv("PDB_Stats.csv", row.names = 1 )
head(PDBstats)
```

There are commas within our data that make them characters rather than numbers. We must remove them in order to do math. Lets make a function that removes the commas, converts to numeric, and sums up the column.

```{r}
PDBstats1 <- gsub(",", "", PDBstats)
```

```{r}
#Removes commma, converts to numeric, and adds column together
commasum <- function(x) {
  sum(as.numeric(gsub(",","",x)))
}
```

```{r}
commasum(PDBstats)
```

I can `apply` this function to the entire table to get all the numbers you need.

```{r}
round(apply(PDBstats,2,commasum) / commasum(PDBstats$Total) *100, 2)
```

> Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

84.54% are X-Ray and 8.72% are EM.

> Q2: What proportion of structures in the PDB are protein?

186,898 are protein

```{r}
head(PDBstats)
```

> Q. How does the total number of protein structures in the PDB relate to total number of protein sequences in Uniprot?

```{r}
186898 / 250322721 *100
```

# Visualizing the HIV-1 Protease

![HIV-1 Protease](1HSG.png)

> Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

215,684 total, 66,858 in humans.

> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

Because it only shows the oxygen. The hydrogen molecule is too small to visualize.

> Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

The hydrogen atom is H308.

> Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![HIV-1 Protease with ASP residues selected](1HSG_ASP.png)

## Working with structures in R.

We will use the bio3d package for structural bioinformatics.

```{r}
library(bio3d)

hiv <- read.pdb("1hsg")
hiv
```

> Q7: How many amino acid residues are there in this pdb object?

198 amino acid residues \> Q8: Name one of the two non-protein residues?

MK1 \> Q9: How many protein chains are in this structure?

2 chains

```{r}
head(hiv$atom)
aa123(pdbseq(hiv)[25])
```

```{r}
adk <- read.pdb("6s36")
adk
```

Normal mode analysis (NMA) a bioinformatics method to predict functional motions and large-scale structural changes.

In fluctuations, the peak areas are the flexible regions of proteins.

```{r}
m <-nma(adk)
plot(m)
```

Make a movie of this predicted motion (a.k.a "trajectory")

```{r}
mktrj(m, file="adk_m7.pdb")
```

# Quick comparative analysis

Workflow: 1. Get protein code from PDB and read it in 2. Get the sequence. 3. Blast against PDB 4. Download all the HITS

Step 1: Extract sequence and run a blast search using `blast.pdb()`

```{r}
# s <- pdbseq(adk)
# blast <- blast.pdb(s)
# plot(blast)
```

```{r}
# hits<- plot(blast)
# hits
```

```{r}
# hits$pdb.id
```

Get the results from BLAST and download top hits.

```{r}
# Download releated PDB files
# files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

When you view them on **MolStar**, they are all mixed and hard to decipher because they are all on different reference frames as they are all individual photos. So we must fix the reference frame to superimpose them on top of each other.

```{r}
# Align releated PDBs
# pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
```

# PCA of all structures

```{r}
# Perform PCA
# pc.xray <- pca(pdbs)
# plot(pc.xray)
```

```{r}
# mktrj(pc.xray, file = "pca_movie.pdb")
```

# Comparative analysis of Adenylate Kinase

> Q10. Which of the packages above is found only on BioConductor and not CRAN?

MSA

> Q11. Which of the above packages is not found on BioConductor or CRAN?

Bio3d-view \> Q12. True or False? Functions from the devtools package can be used to install packages from GitHub and BitBucket?

TRUE

```{r}
library(bio3d)
aa <- get.seq("1ake_A")
aa
```

> Q13. How many amino acids are in this sequence, i.e. how long is this sequence?

214

```{r}
# Blast or hmmer search 
# b <- blast.pdb(aa)
```

```{r}
# Plot a summary of search results
# hits <- plot(b)
```

```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')
```

```{r}
# List out some 'top hits'
head(hits$pdb.id)
```

```{r}
# Download releated PDB files
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```

# Align and super impose structures

```{r}
# Align releated PDBs
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
```

```{r}
# Vector containing PDB codes for figure axis
ids <- basename.pdb(pdbs$id)

# Draw schematic alignment
# plot(pdbs, labels=ids, par(mar=c(1,1,1,1)))
```

```{r}
library(bio3d.view)
library(rgl)

view.pdbs(pdbs)
```

#Annotated PDB structures

The function `pdb.annotate()` provides a convenient way of annotating the PDB files we have collected.

```{r}
anno <- pdb.annotate(ids)
unique(anno$source)
```

```{r}
anno
```

# Principal component analysis

PCA PCA can be performed on the structural ensemble (stored in the pdbs object) with the function `pca.xyz()`, or more simply `pca()`.

```{r}
# Perform PCA
pc.xray <- pca(pdbs)
plot(pc.xray)
```

The function `rmsd()` calculates all pairwise RMSD values in a dataset.

```{r}
# Calculate RMSD
rd <- rmsd(pdbs)

# Structure-based clustering
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)

plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```

```{r}
# Visualize first principal component
pc1 <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```

```{r}
#Plotting results with ggplot2
library(ggplot2)
library(ggrepel)

df <- data.frame(PC1=pc.xray$z[,1], 
                 PC2=pc.xray$z[,2], 
                 col=as.factor(grps.rd),
                 ids=ids)

p <- ggplot(df) + 
  aes(PC1, PC2, col=col, label=ids) +
  geom_point(size=2) +
  geom_text_repel(max.overlaps = 20) +
  theme(legend.position = "none")
p
```

```{r}
# NMA of all structures
modes <- nma(pdbs)
```

```{r}
plot(modes, pdbs, col=grps.rd)
```

> Q14. What do you note about this plot? Are the black and colored lines similar or different? Where do you think they differ most and why?

These are the flexible structures of the proteins seen at the peaks with their fluctuation graphs super imposed. THe color has the ones that most closely cluster together representing different states of the structure.
